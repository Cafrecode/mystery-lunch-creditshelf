1. Notify employees of their matched lunches via email 
2. Only HR can add or remove employees
3. Aws for pics - active storage - use apt name
4. Devise for employees
5. Only generate random passwords for HR? when created?

home visible without login option? only hide menu if not logged in, when loggedin iclude employees and home

# not including email as devise will include
rails g scaffold Employee name:string department:integer status:integer

run through entire app to document choices etc, including menu visibility etc

to delete, you have to explicitly change the status from the edit section of the employee

describe the need for auto generated passwords.

protected views -- how to handle?

delete should be an action, that sets the status to deleted!


#################################

Algo Requirements:

1. Matched with someone from a different department

    - get list of employees
    - traverse while finding a diff department
    - pop both from the list and keep going

    (what happens when left with two from same dept? crash and burn?)
    - or have a fun on employee class called get match? nope, maybe?
2. Cannot be the same one if has been matched in last 3 months


* can get current match, can get previous matches - from employee model
* only hr can add users btw* can see the admin section for users* don't need to enforce on display?
* if no matches can be available for whatever reason: no employees, 
all in one department etc (if no criteria is met): display no lunches this month,
 we cant create matches matching the criteria

 respond to email to suggest location?time?

 rails g model Lunch location:string date:datetime 

 rails g model EmployeeLunch date:date employee_id:bigint lunch_id:bigint

 TODO:

 [x] Email configuration including templates for newly registered users, plus sending out emails
 [/] Background cron job for match making service, triggered on x day of month. send emails for matches
 [x] Display matches on home page - with images etc
 [ ] Cleanup/Documentation
 [ ] Anonymous home page - disp login option, cleaner menu
 [ ] Docker configs/setup
 [ ] Production deployment
 [X] Employee deletions
 [ ] Third person/odd person handling
 [ ] Match only if previous is older than 3 months
 [X] Email notifications for matches, registrations
 [X] Add cron tab support to run matching (inc instruction on scheduling from console?)

     # probably not the best place for this, but temporary
    # EmployeeMatchingJob.set(wait_until: 0.days.from_now.end_of_month + 1.second).perform_later
    # EmployeeMatchingJob.perform_later

    whenever --update-crontab